version: '3.3'
volumes:
  static:
  backend_static:
  backend_media:
  pg_data:

services:
  db:
    image: postgres:13.10
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
  backend:
    image: mnk96/foodgram_backend
    env_file: .env
    volumes:
      - backend_static:/app/static
      - backend_media:/app/media
    depends_on:
      - db
  frontend:
    image: mnk96/foodgram_frontend
    volumes:
      - static:/app/result_build/build
  gateway:
    image: mnk96/foodgram_gateway
    env_file: .env
    volumes:
      - static:/staticfiles/
    ports:
      - 8000:80
  deploy:
    runs-on: ubuntu-latest
    needs: 
      - build_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
      - build_gateway_and_push_to_docker_hub
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Copy docker-compose.yml via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "docker-compose.production.yml"
        target: "taski"
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd foodgram
          sudo docker compose -f docker-compose.production.yml pull
          sudo docker compose -f docker-compose.production.yml down
          sudo docker compose -f docker-compose.production.yml up -d
          sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
          sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic
          sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/collected_static/. /backend_static/static/ 
